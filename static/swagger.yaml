openapi: 3.0.0
info:
  title: E-Commerce API
  version: 1.0.0
paths:
  /login:
    post:
      summary: Login a customer account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successfully logged in
        '401':
          description: Invalid credentials

  /accounts:
    post:
      summary: Create a new customer account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/models/schemas/customerAccount'
      responses:
        '201':
          description: Account successfully created
        '400':
          description: Validation error
    get:
      summary: Get all customer accounts
      responses:
        '200':
          description: List of customer accounts

  /accounts/{account_id}:
    get:
      summary: Get a customer account by ID
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer account details
        '404':
          description: Account not found
    put:
      summary: Update a customer account by ID
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/models/schemas/customerAccount'
      responses:
        '200':
          description: Customer account updated
        '400':
          description: Validation error
    delete:
      summary: Delete a customer account by ID
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer account deleted
        '404':
          description: Account not found

  /customers:
    post:
      summary: Create a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/models/schemas/customerSchema'
      responses:
        '201':
          description: Customer successfully created
        '400':
          description: Validation error
    get:
      summary: Get all customers
      responses:
        '200':
          description: List of customers

  /customers/{id}:
    get:
      summary: Get a customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer details
        '404':
          description: Customer not found
    put:
      summary: Update a customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/models/schemas/customerSchema'
      responses:
        '200':
          description: Customer updated
        '400':
          description: Validation error
    delete:
      summary: Delete a customer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer deleted
        '404':
          description: Customer not found

  /orders:
    post:
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/models/schemas/orderSchema'
      responses:
        '200':
          description: Order placed successfully
        '400':
          description: Validation error

  /orders/{order_id}:
    get:
      summary: Retrieve an order by ID
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order details
        '404':
          description: Order not found

  /products:
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/models/schemas/productSchema'
      responses:
        '201':
          description: Product successfully created
        '400':
          description: Validation error
    get:
      summary: Get all products
      responses:
        '200':
          description: List of products

  /products/{product_id}:
    get:
      summary: Get a product by ID
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product details
        '404':
          description: Product not found
    put:
      summary: Update a product by ID
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/models/schemas/productSchemas'
      responses:
        '200':
          description: Product updated
        '400':
          description: Validation error
    delete:
      summary: Delete a product by ID
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Product deleted
        '404':
          description: Product not found

components:
  schemas:
    CustomerAccount:
      type: object
      properties:
        customer_id:
          type: integer
        username:
          type: string
        password:
          type: string
        role_id:
          type: integer

    Customer:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string

    Order:
      type: object
      properties:
        account_id:
          type: integer
        products:
          type: array
          items:
            type: integer

    Product:
      type: object
      properties:
        product_name:
          type: string
        description:
          type: string
        price:
          type: number
        stock_quantity:
          type: integer
